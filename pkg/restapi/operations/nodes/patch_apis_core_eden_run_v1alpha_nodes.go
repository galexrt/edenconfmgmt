// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PatchApisCoreEdenRunV1alphaNodesHandlerFunc turns a function with the right signature into a patch apis core eden run v1alpha nodes handler
type PatchApisCoreEdenRunV1alphaNodesHandlerFunc func(PatchApisCoreEdenRunV1alphaNodesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PatchApisCoreEdenRunV1alphaNodesHandlerFunc) Handle(params PatchApisCoreEdenRunV1alphaNodesParams) middleware.Responder {
	return fn(params)
}

// PatchApisCoreEdenRunV1alphaNodesHandler interface for that can handle valid patch apis core eden run v1alpha nodes params
type PatchApisCoreEdenRunV1alphaNodesHandler interface {
	Handle(PatchApisCoreEdenRunV1alphaNodesParams) middleware.Responder
}

// NewPatchApisCoreEdenRunV1alphaNodes creates a new http.Handler for the patch apis core eden run v1alpha nodes operation
func NewPatchApisCoreEdenRunV1alphaNodes(ctx *middleware.Context, handler PatchApisCoreEdenRunV1alphaNodesHandler) *PatchApisCoreEdenRunV1alphaNodes {
	return &PatchApisCoreEdenRunV1alphaNodes{Context: ctx, Handler: handler}
}

/*PatchApisCoreEdenRunV1alphaNodes swagger:route PATCH /apis/core.eden.run/v1alpha/nodes core.eden.run/v1alpha/nodes patchApisCoreEdenRunV1alphaNodes

Patch a Node object.

*/
type PatchApisCoreEdenRunV1alphaNodes struct {
	Context *middleware.Context
	Handler PatchApisCoreEdenRunV1alphaNodesHandler
}

func (o *PatchApisCoreEdenRunV1alphaNodes) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPatchApisCoreEdenRunV1alphaNodesParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
