// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "edenrun",
    "license": {
      "name": "Apache 2.0"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/apis/core.eden.run/v1alpha/nodes": {
      "get": {
        "description": "Return Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/objectName"
          },
          {
            "$ref": "#/parameters/namespaceName"
          },
          {
            "$ref": "#/parameters/labelSelector"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Node objects.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/node"
              }
            }
          },
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "put": {
        "description": "Replace a Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/objectName"
          }
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "post": {
        "description": "Update a Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "delete": {
        "description": "Delete a Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "patch": {
        "description": "Patch a Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/objectName"
          }
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      }
    },
    "/apis/core.eden.run/v1alpha/watch/nodes": {
      "get": {
        "description": "Watch Node objects.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/objectName"
          },
          {
            "$ref": "#/parameters/labelSelector"
          }
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      }
    },
    "/version": {
      "get": {
        "description": "Return version.",
        "tags": [
          "core"
        ],
        "responses": {
          "default": {
            "description": "Return version info."
          }
        }
      }
    }
  },
  "definitions": {
    "networkAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "ver": {
          "type": "string"
        }
      }
    },
    "node": {
      "type": "object",
      "required": [
        "metadata"
      ],
      "properties": {
        "metadata": {
          "$ref": "#/definitions/objectMetadata"
        },
        "spec": {
          "type": "object",
          "properties": {
            "network": {
              "type": "object",
              "properties": {
                "addresses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/networkAddress"
                  }
                },
                "fqdn": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                }
              }
            }
          }
        },
        "status": {
          "$ref": "#/definitions/nodeStatus"
        }
      }
    },
    "nodeStatus": {
      "type": "object"
    },
    "objectMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 63,
          "minLength": 1
        },
        "namespace": {
          "type": "string"
        },
        "uuid": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "labelSelector": {
      "type": "string",
      "description": "Selector to restrict list of returned objects by their labels. default is everything.",
      "name": "labelSelector",
      "in": "query"
    },
    "namespaceName": {
      "type": "string",
      "description": "Namespace name",
      "name": "namespace",
      "in": "query"
    },
    "namespacePath": {
      "type": "string",
      "description": "Namespace name",
      "name": "namespace",
      "in": "path",
      "required": true
    },
    "objectName": {
      "type": "string",
      "description": "Object name",
      "name": "name",
      "in": "query"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "edenrun",
    "license": {
      "name": "Apache 2.0"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/apis/core.eden.run/v1alpha/nodes": {
      "get": {
        "description": "Return Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Object name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Namespace name",
            "name": "namespace",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Selector to restrict list of returned objects by their labels. default is everything.",
            "name": "labelSelector",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Node objects.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/node"
              }
            }
          },
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "put": {
        "description": "Replace a Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Object name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "post": {
        "description": "Update a Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "delete": {
        "description": "Delete a Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      },
      "patch": {
        "description": "Patch a Node object.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Object name",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      }
    },
    "/apis/core.eden.run/v1alpha/watch/nodes": {
      "get": {
        "description": "Watch Node objects.",
        "tags": [
          "core.eden.run/v1alpha/nodes"
        ],
        "parameters": [
          {
            "type": "string",
            "description": "Object name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Selector to restrict list of returned objects by their labels. default is everything.",
            "name": "labelSelector",
            "in": "query"
          }
        ],
        "responses": {
          "default": {
            "description": "Default error sample response"
          }
        }
      }
    },
    "/version": {
      "get": {
        "description": "Return version.",
        "tags": [
          "core"
        ],
        "responses": {
          "default": {
            "description": "Return version info."
          }
        }
      }
    }
  },
  "definitions": {
    "networkAddress": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "ver": {
          "type": "string"
        }
      }
    },
    "node": {
      "type": "object",
      "required": [
        "metadata"
      ],
      "properties": {
        "metadata": {
          "$ref": "#/definitions/objectMetadata"
        },
        "spec": {
          "type": "object",
          "properties": {
            "network": {
              "type": "object",
              "properties": {
                "addresses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/networkAddress"
                  }
                },
                "fqdn": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1
                }
              }
            }
          }
        },
        "status": {
          "$ref": "#/definitions/nodeStatus"
        }
      }
    },
    "nodeStatus": {
      "type": "object"
    },
    "objectMetadata": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 63,
          "minLength": 1
        },
        "namespace": {
          "type": "string"
        },
        "uuid": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        }
      }
    }
  },
  "parameters": {
    "labelSelector": {
      "type": "string",
      "description": "Selector to restrict list of returned objects by their labels. default is everything.",
      "name": "labelSelector",
      "in": "query"
    },
    "namespaceName": {
      "type": "string",
      "description": "Namespace name",
      "name": "namespace",
      "in": "query"
    },
    "namespacePath": {
      "type": "string",
      "description": "Namespace name",
      "name": "namespace",
      "in": "path",
      "required": true
    },
    "objectName": {
      "type": "string",
      "description": "Object name",
      "name": "name",
      "in": "query"
    }
  }
}`))
}
