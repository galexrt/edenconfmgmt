// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/galexrt/edenconfmgmt/pkg/apis/config/v1alpha/api.proto

package v1alpha

import (
	fmt "fmt"
	v1alpha "github.com/galexrt/edenconfmgmt/pkg/apis/core/v1alpha"
	v1alpha1 "github.com/galexrt/edenconfmgmt/pkg/apis/events/v1alpha"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Config object base.
type Config struct {
	// Metadata for Config object.
	ObjectMetadata *v1alpha.ObjectMetadata `protobuf:"bytes,1,opt,name=objectMetadata,proto3" json:"objectMetadata,omitempty"`
	// Spec for Config.
	Spec                 *ConfigSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_326e4e6db7d5a894, []int{0}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetObjectMetadata() *v1alpha.ObjectMetadata {
	if m != nil {
		return m.ObjectMetadata
	}
	return nil
}

func (m *Config) GetSpec() *ConfigSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type ConfigSpec struct {
	// DataStore.
	DataStore            *DataStore `protobuf:"bytes,1,opt,name=dataStore,proto3" json:"dataStore,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ConfigSpec) Reset()         { *m = ConfigSpec{} }
func (m *ConfigSpec) String() string { return proto.CompactTextString(m) }
func (*ConfigSpec) ProtoMessage()    {}
func (*ConfigSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_326e4e6db7d5a894, []int{1}
}

func (m *ConfigSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigSpec.Unmarshal(m, b)
}
func (m *ConfigSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigSpec.Marshal(b, m, deterministic)
}
func (m *ConfigSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigSpec.Merge(m, src)
}
func (m *ConfigSpec) XXX_Size() int {
	return xxx_messageInfo_ConfigSpec.Size(m)
}
func (m *ConfigSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigSpec proto.InternalMessageInfo

func (m *ConfigSpec) GetDataStore() *DataStore {
	if m != nil {
		return m.DataStore
	}
	return nil
}

// DataStore config for the data store
type DataStore struct {
	// Type.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Count.
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataStore) Reset()         { *m = DataStore{} }
func (m *DataStore) String() string { return proto.CompactTextString(m) }
func (*DataStore) ProtoMessage()    {}
func (*DataStore) Descriptor() ([]byte, []int) {
	return fileDescriptor_326e4e6db7d5a894, []int{2}
}

func (m *DataStore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataStore.Unmarshal(m, b)
}
func (m *DataStore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataStore.Marshal(b, m, deterministic)
}
func (m *DataStore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataStore.Merge(m, src)
}
func (m *DataStore) XXX_Size() int {
	return xxx_messageInfo_DataStore.Size(m)
}
func (m *DataStore) XXX_DiscardUnknown() {
	xxx_messageInfo_DataStore.DiscardUnknown(m)
}

var xxx_messageInfo_DataStore proto.InternalMessageInfo

func (m *DataStore) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *DataStore) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type AddConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddConfigResponse) Reset()         { *m = AddConfigResponse{} }
func (m *AddConfigResponse) String() string { return proto.CompactTextString(m) }
func (*AddConfigResponse) ProtoMessage()    {}
func (*AddConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_326e4e6db7d5a894, []int{3}
}

func (m *AddConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddConfigResponse.Unmarshal(m, b)
}
func (m *AddConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddConfigResponse.Marshal(b, m, deterministic)
}
func (m *AddConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddConfigResponse.Merge(m, src)
}
func (m *AddConfigResponse) XXX_Size() int {
	return xxx_messageInfo_AddConfigResponse.Size(m)
}
func (m *AddConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddConfigResponse proto.InternalMessageInfo

type UpdateConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateConfigResponse) Reset()         { *m = UpdateConfigResponse{} }
func (m *UpdateConfigResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateConfigResponse) ProtoMessage()    {}
func (*UpdateConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_326e4e6db7d5a894, []int{4}
}

func (m *UpdateConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateConfigResponse.Unmarshal(m, b)
}
func (m *UpdateConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateConfigResponse.Marshal(b, m, deterministic)
}
func (m *UpdateConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateConfigResponse.Merge(m, src)
}
func (m *UpdateConfigResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateConfigResponse.Size(m)
}
func (m *UpdateConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateConfigResponse proto.InternalMessageInfo

type DeleteConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteConfigResponse) Reset()         { *m = DeleteConfigResponse{} }
func (m *DeleteConfigResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteConfigResponse) ProtoMessage()    {}
func (*DeleteConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_326e4e6db7d5a894, []int{5}
}

func (m *DeleteConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteConfigResponse.Unmarshal(m, b)
}
func (m *DeleteConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteConfigResponse.Marshal(b, m, deterministic)
}
func (m *DeleteConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteConfigResponse.Merge(m, src)
}
func (m *DeleteConfigResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteConfigResponse.Size(m)
}
func (m *DeleteConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteConfigResponse proto.InternalMessageInfo

type WatchConfigResponse struct {
	// Event info for watch response.
	Event *v1alpha1.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// Config for watch response.
	Config               *Config  `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchConfigResponse) Reset()         { *m = WatchConfigResponse{} }
func (m *WatchConfigResponse) String() string { return proto.CompactTextString(m) }
func (*WatchConfigResponse) ProtoMessage()    {}
func (*WatchConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_326e4e6db7d5a894, []int{6}
}

func (m *WatchConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchConfigResponse.Unmarshal(m, b)
}
func (m *WatchConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchConfigResponse.Marshal(b, m, deterministic)
}
func (m *WatchConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchConfigResponse.Merge(m, src)
}
func (m *WatchConfigResponse) XXX_Size() int {
	return xxx_messageInfo_WatchConfigResponse.Size(m)
}
func (m *WatchConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchConfigResponse proto.InternalMessageInfo

func (m *WatchConfigResponse) GetEvent() *v1alpha1.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *WatchConfigResponse) GetConfig() *Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*Config)(nil), "config.v1alpha.Config")
	proto.RegisterType((*ConfigSpec)(nil), "config.v1alpha.ConfigSpec")
	proto.RegisterType((*DataStore)(nil), "config.v1alpha.DataStore")
	proto.RegisterType((*AddConfigResponse)(nil), "config.v1alpha.AddConfigResponse")
	proto.RegisterType((*UpdateConfigResponse)(nil), "config.v1alpha.UpdateConfigResponse")
	proto.RegisterType((*DeleteConfigResponse)(nil), "config.v1alpha.DeleteConfigResponse")
	proto.RegisterType((*WatchConfigResponse)(nil), "config.v1alpha.WatchConfigResponse")
}

func init() {
	proto.RegisterFile("github.com/galexrt/edenconfmgmt/pkg/apis/config/v1alpha/api.proto", fileDescriptor_326e4e6db7d5a894)
}

var fileDescriptor_326e4e6db7d5a894 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xad, 0xe9, 0x07, 0xf2, 0x14, 0x45, 0x62, 0x5b, 0xaa, 0x62, 0x81, 0x05, 0x86, 0x03, 0x12,
	0x62, 0x0d, 0x45, 0xa8, 0x07, 0x0e, 0xa8, 0x90, 0x96, 0x4b, 0x11, 0xd2, 0x46, 0x05, 0x89, 0xdb,
	0xc6, 0x9e, 0x3a, 0x86, 0xc4, 0xbb, 0xd8, 0x9b, 0x08, 0x2e, 0x88, 0x9f, 0xc0, 0xbf, 0xa2, 0x47,
	0x8e, 0x1c, 0x69, 0xf8, 0x23, 0xc8, 0xbb, 0x9b, 0x34, 0xb1, 0x63, 0x29, 0xf4, 0xb6, 0xf3, 0xf6,
	0xcd, 0x9b, 0x8f, 0xb7, 0x36, 0x1c, 0x24, 0xa9, 0xea, 0x0d, 0xbb, 0x34, 0x12, 0x83, 0x30, 0xe1,
	0x7d, 0xfc, 0x92, 0xab, 0x10, 0x63, 0xcc, 0x22, 0x91, 0x9d, 0x0e, 0x92, 0x81, 0x0a, 0xe5, 0xa7,
	0x24, 0xe4, 0x32, 0x2d, 0xc2, 0x12, 0x49, 0x93, 0x70, 0xf4, 0x84, 0xf7, 0x65, 0x8f, 0x97, 0x18,
	0x95, 0xb9, 0x50, 0x82, 0xb4, 0xcc, 0x0d, 0xb5, 0x37, 0xde, 0xa3, 0x59, 0x49, 0x91, 0x88, 0x50,
	0xd3, 0xba, 0xc3, 0x53, 0x1d, 0xe9, 0x40, 0x9f, 0x4c, 0xba, 0xf7, 0xe2, 0x3f, 0x3a, 0xc8, 0xb1,
	0x5e, 0xdf, 0x5b, 0x7e, 0x04, 0x1c, 0x61, 0xa6, 0x8a, 0xba, 0x44, 0xf0, 0x0d, 0x36, 0x5e, 0xe9,
	0x21, 0x48, 0x1b, 0x5a, 0xa2, 0xfb, 0x11, 0x23, 0xf5, 0x06, 0x15, 0x8f, 0xb9, 0xe2, 0xbb, 0xce,
	0x1d, 0xe7, 0xc1, 0xe6, 0xde, 0x2d, 0x5a, 0x56, 0x9f, 0xcc, 0x48, 0xdf, 0xce, 0x71, 0x58, 0x25,
	0x87, 0x50, 0x58, 0x2b, 0x24, 0x46, 0xbb, 0x57, 0x74, 0xae, 0x47, 0xe7, 0x37, 0x44, 0x4d, 0xad,
	0x8e, 0xc4, 0x88, 0x69, 0x5e, 0x70, 0x08, 0x70, 0x81, 0x91, 0x7d, 0x70, 0x4b, 0x95, 0x8e, 0x12,
	0x39, 0xda, 0xf2, 0x37, 0xab, 0x12, 0xed, 0x09, 0x81, 0x5d, 0x70, 0x83, 0x67, 0xe0, 0x4e, 0x71,
	0x42, 0x60, 0x4d, 0x7d, 0x95, 0x46, 0xc0, 0x65, 0xfa, 0x4c, 0xb6, 0x61, 0x3d, 0x12, 0xc3, 0x4c,
	0xe9, 0xc6, 0x56, 0x99, 0x09, 0x82, 0x2d, 0xb8, 0x7e, 0x10, 0xc7, 0xa6, 0x01, 0x86, 0x85, 0x14,
	0x59, 0x81, 0xc1, 0x0e, 0x6c, 0x9f, 0xc8, 0x98, 0x2b, 0xac, 0xe3, 0x6d, 0xec, 0x63, 0x0d, 0xcf,
	0x61, 0xeb, 0x3d, 0x57, 0x51, 0x6f, 0x1e, 0x26, 0x0f, 0x61, 0x5d, 0x6f, 0xdd, 0xce, 0x71, 0x83,
	0x1a, 0x0f, 0xa6, 0x73, 0x1c, 0x96, 0x21, 0x33, 0x1c, 0x42, 0x27, 0x36, 0xd8, 0xc5, 0xed, 0x2c,
	0x5e, 0x1c, 0xb3, 0xac, 0xbd, 0x9f, 0xab, 0xd0, 0x32, 0xc7, 0xa2, 0x83, 0xf9, 0x28, 0x8d, 0x90,
	0x1c, 0xc1, 0xd5, 0x77, 0x98, 0x17, 0xa9, 0xc8, 0x48, 0xc5, 0x32, 0x0b, 0x33, 0xfc, 0x3c, 0xc4,
	0x42, 0x79, 0xb7, 0x1b, 0x6e, 0x6d, 0xdf, 0xcf, 0xc1, 0x7d, 0x8d, 0xca, 0x3e, 0x8a, 0x86, 0x3e,
	0xbc, 0x06, 0x9c, 0x1c, 0x81, 0x3b, 0x5d, 0x68, 0x63, 0xf2, 0xdd, 0x2a, 0x5e, 0xf3, 0x80, 0x1c,
	0xc3, 0xb5, 0x59, 0x0f, 0x1a, 0xa5, 0xee, 0x57, 0xf1, 0x45, 0xce, 0x95, 0x6a, 0xb3, 0xce, 0x2d,
	0xaf, 0xb6, 0xc8, 0x6f, 0x72, 0x0c, 0x9b, 0x33, 0x7e, 0x37, 0x8a, 0xdd, 0xab, 0xe2, 0x0b, 0x1e,
	0xc9, 0x63, 0xe7, 0xe5, 0xc9, 0xd9, 0xb9, 0xef, 0xfc, 0x3e, 0xf7, 0x57, 0xbe, 0x8f, 0x7d, 0xe7,
	0x6c, 0xec, 0x3b, 0xbf, 0xc6, 0xbe, 0xf3, 0x67, 0xec, 0x3b, 0x3f, 0xfe, 0xfa, 0x2b, 0x1f, 0xf6,
	0x2f, 0xf9, 0x93, 0xea, 0x6e, 0xe8, 0xcf, 0xfb, 0xe9, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd0,
	0x2d, 0x56, 0x88, 0xe6, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfigsServiceClient is the client API for ConfigsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfigsServiceClient interface {
	// Version returns the API version.
	Version(ctx context.Context, in *v1alpha.VersionRequest, opts ...grpc.CallOption) (*v1alpha.VersionResponse, error)
	// Get a Config.
	GetConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Config, error)
	// Add a Config.
	AddConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (*AddConfigResponse, error)
	// Update a Config.
	UpdateConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (*UpdateConfigResponse, error)
	// Delete a Config.
	DeleteConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (*DeleteConfigResponse, error)
	// Watch a Config.
	WatchConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (ConfigsService_WatchConfigClient, error)
}

type configsServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfigsServiceClient(cc *grpc.ClientConn) ConfigsServiceClient {
	return &configsServiceClient{cc}
}

func (c *configsServiceClient) Version(ctx context.Context, in *v1alpha.VersionRequest, opts ...grpc.CallOption) (*v1alpha.VersionResponse, error) {
	out := new(v1alpha.VersionResponse)
	err := c.cc.Invoke(ctx, "/config.v1alpha.ConfigsService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configsServiceClient) GetConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (*Config, error) {
	out := new(Config)
	err := c.cc.Invoke(ctx, "/config.v1alpha.ConfigsService/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configsServiceClient) AddConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (*AddConfigResponse, error) {
	out := new(AddConfigResponse)
	err := c.cc.Invoke(ctx, "/config.v1alpha.ConfigsService/AddConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configsServiceClient) UpdateConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (*UpdateConfigResponse, error) {
	out := new(UpdateConfigResponse)
	err := c.cc.Invoke(ctx, "/config.v1alpha.ConfigsService/UpdateConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configsServiceClient) DeleteConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (*DeleteConfigResponse, error) {
	out := new(DeleteConfigResponse)
	err := c.cc.Invoke(ctx, "/config.v1alpha.ConfigsService/DeleteConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *configsServiceClient) WatchConfig(ctx context.Context, in *Config, opts ...grpc.CallOption) (ConfigsService_WatchConfigClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ConfigsService_serviceDesc.Streams[0], "/config.v1alpha.ConfigsService/WatchConfig", opts...)
	if err != nil {
		return nil, err
	}
	x := &configsServiceWatchConfigClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ConfigsService_WatchConfigClient interface {
	Recv() (*WatchConfigResponse, error)
	grpc.ClientStream
}

type configsServiceWatchConfigClient struct {
	grpc.ClientStream
}

func (x *configsServiceWatchConfigClient) Recv() (*WatchConfigResponse, error) {
	m := new(WatchConfigResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ConfigsServiceServer is the server API for ConfigsService service.
type ConfigsServiceServer interface {
	// Version returns the API version.
	Version(context.Context, *v1alpha.VersionRequest) (*v1alpha.VersionResponse, error)
	// Get a Config.
	GetConfig(context.Context, *Config) (*Config, error)
	// Add a Config.
	AddConfig(context.Context, *Config) (*AddConfigResponse, error)
	// Update a Config.
	UpdateConfig(context.Context, *Config) (*UpdateConfigResponse, error)
	// Delete a Config.
	DeleteConfig(context.Context, *Config) (*DeleteConfigResponse, error)
	// Watch a Config.
	WatchConfig(*Config, ConfigsService_WatchConfigServer) error
}

func RegisterConfigsServiceServer(s *grpc.Server, srv ConfigsServiceServer) {
	s.RegisterService(&_ConfigsService_serviceDesc, srv)
}

func _ConfigsService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigsServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.v1alpha.ConfigsService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigsServiceServer).Version(ctx, req.(*v1alpha.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigsService_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigsServiceServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.v1alpha.ConfigsService/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigsServiceServer).GetConfig(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigsService_AddConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigsServiceServer).AddConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.v1alpha.ConfigsService/AddConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigsServiceServer).AddConfig(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigsService_UpdateConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigsServiceServer).UpdateConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.v1alpha.ConfigsService/UpdateConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigsServiceServer).UpdateConfig(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigsService_DeleteConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Config)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfigsServiceServer).DeleteConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/config.v1alpha.ConfigsService/DeleteConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfigsServiceServer).DeleteConfig(ctx, req.(*Config))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConfigsService_WatchConfig_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Config)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ConfigsServiceServer).WatchConfig(m, &configsServiceWatchConfigServer{stream})
}

type ConfigsService_WatchConfigServer interface {
	Send(*WatchConfigResponse) error
	grpc.ServerStream
}

type configsServiceWatchConfigServer struct {
	grpc.ServerStream
}

func (x *configsServiceWatchConfigServer) Send(m *WatchConfigResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ConfigsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "config.v1alpha.ConfigsService",
	HandlerType: (*ConfigsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _ConfigsService_Version_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _ConfigsService_GetConfig_Handler,
		},
		{
			MethodName: "AddConfig",
			Handler:    _ConfigsService_AddConfig_Handler,
		},
		{
			MethodName: "UpdateConfig",
			Handler:    _ConfigsService_UpdateConfig_Handler,
		},
		{
			MethodName: "DeleteConfig",
			Handler:    _ConfigsService_DeleteConfig_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchConfig",
			Handler:       _ConfigsService_WatchConfig_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/galexrt/edenconfmgmt/pkg/apis/config/v1alpha/api.proto",
}
