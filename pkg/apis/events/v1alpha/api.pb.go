// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/galexrt/edenconfmgmt/pkg/apis/events/v1alpha/api.proto

package v1alpha

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VersionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionRequest) Reset()         { *m = VersionRequest{} }
func (m *VersionRequest) String() string { return proto.CompactTextString(m) }
func (*VersionRequest) ProtoMessage()    {}
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_57c26361c2d00172, []int{0}
}

func (m *VersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionRequest.Unmarshal(m, b)
}
func (m *VersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionRequest.Marshal(b, m, deterministic)
}
func (m *VersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionRequest.Merge(m, src)
}
func (m *VersionRequest) XXX_Size() int {
	return xxx_messageInfo_VersionRequest.Size(m)
}
func (m *VersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VersionRequest proto.InternalMessageInfo

type VersionResponse struct {
	// Semversion compatible version number.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Semversion major number.
	Major int64 `protobuf:"varint,2,opt,name=major,proto3" json:"major,omitempty"`
	// Semversion minor number.
	Minor int64 `protobuf:"varint,3,opt,name=minor,proto3" json:"minor,omitempty"`
	// Semversion patch number.
	Patch int64 `protobuf:"varint,4,opt,name=patch,proto3" json:"patch,omitempty"`
	// API state (e.g., alpha, beta, stable).
	State                string   `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionResponse) Reset()         { *m = VersionResponse{} }
func (m *VersionResponse) String() string { return proto.CompactTextString(m) }
func (*VersionResponse) ProtoMessage()    {}
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_57c26361c2d00172, []int{1}
}

func (m *VersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionResponse.Unmarshal(m, b)
}
func (m *VersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionResponse.Marshal(b, m, deterministic)
}
func (m *VersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionResponse.Merge(m, src)
}
func (m *VersionResponse) XXX_Size() int {
	return xxx_messageInfo_VersionResponse.Size(m)
}
func (m *VersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VersionResponse proto.InternalMessageInfo

func (m *VersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *VersionResponse) GetMajor() int64 {
	if m != nil {
		return m.Major
	}
	return 0
}

func (m *VersionResponse) GetMinor() int64 {
	if m != nil {
		return m.Minor
	}
	return 0
}

func (m *VersionResponse) GetPatch() int64 {
	if m != nil {
		return m.Patch
	}
	return 0
}

func (m *VersionResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type Event struct {
	// Type of the event
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Summary of event.
	Summary              string   `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_57c26361c2d00172, []int{2}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Event) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func init() {
	proto.RegisterType((*VersionRequest)(nil), "events.v1alpha.VersionRequest")
	proto.RegisterType((*VersionResponse)(nil), "events.v1alpha.VersionResponse")
	proto.RegisterType((*Event)(nil), "events.v1alpha.Event")
}

func init() {
	proto.RegisterFile("github.com/galexrt/edenconfmgmt/pkg/apis/events/v1alpha/api.proto", fileDescriptor_57c26361c2d00172)
}

var fileDescriptor_57c26361c2d00172 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xb1, 0x4e, 0xf3, 0x30,
	0x10, 0x80, 0xeb, 0xbf, 0xed, 0x5f, 0xd5, 0x42, 0x05, 0x59, 0x0c, 0x51, 0x07, 0x53, 0x55, 0x42,
	0xea, 0x42, 0x2c, 0x40, 0x3c, 0x00, 0x48, 0x2c, 0x8c, 0x41, 0x62, 0xe8, 0xe6, 0x86, 0x6b, 0x1a,
	0x68, 0x6c, 0x63, 0x3b, 0x11, 0xdd, 0x90, 0x78, 0x01, 0x1e, 0xab, 0x23, 0x23, 0x23, 0x0d, 0x2f,
	0x82, 0x6c, 0xa7, 0x88, 0x0e, 0x6c, 0xf7, 0x7d, 0xe7, 0xbb, 0xf3, 0x1d, 0xbe, 0xcc, 0x72, 0xbb,
	0x28, 0x67, 0x71, 0x2a, 0x0b, 0x96, 0xf1, 0x25, 0x3c, 0x6b, 0xcb, 0xe0, 0x1e, 0x44, 0x2a, 0xc5,
	0xbc, 0xc8, 0x0a, 0xcb, 0xd4, 0x63, 0xc6, 0xb8, 0xca, 0x0d, 0x83, 0x0a, 0x84, 0x35, 0xac, 0x3a,
	0xe5, 0x4b, 0xb5, 0xe0, 0xce, 0xc5, 0x4a, 0x4b, 0x2b, 0xc9, 0x20, 0x64, 0xe2, 0x26, 0x33, 0x3c,
	0xf9, 0xdd, 0x52, 0x66, 0x92, 0xf9, 0x67, 0xb3, 0x72, 0xee, 0xc9, 0x83, 0x8f, 0x42, 0xf9, 0xf8,
	0x00, 0x0f, 0xee, 0x40, 0x9b, 0x5c, 0x8a, 0x04, 0x9e, 0x4a, 0x30, 0x76, 0xfc, 0x8a, 0xf0, 0xfe,
	0x8f, 0x32, 0x4a, 0x0a, 0x03, 0x24, 0xc2, 0xbd, 0x2a, 0xa8, 0x08, 0x8d, 0xd0, 0xa4, 0x9f, 0x6c,
	0x91, 0x1c, 0xe2, 0x6e, 0xc1, 0x1f, 0xa4, 0x8e, 0xfe, 0x8d, 0xd0, 0xa4, 0x9d, 0x04, 0xf0, 0x36,
	0x17, 0x52, 0x47, 0xed, 0xc6, 0x3a, 0x70, 0x56, 0x71, 0x9b, 0x2e, 0xa2, 0x4e, 0xb0, 0x1e, 0x9c,
	0x35, 0x96, 0x5b, 0x88, 0xba, 0xbe, 0x73, 0x80, 0xf1, 0x05, 0xee, 0x5e, 0xbb, 0xc5, 0x08, 0xc1,
	0x1d, 0xbb, 0x52, 0xd0, 0xcc, 0xf5, 0xb1, 0xfb, 0x8e, 0x29, 0x8b, 0x82, 0xeb, 0x95, 0x1f, 0xdb,
	0x4f, 0xb6, 0x78, 0x36, 0xc5, 0x7b, 0xbe, 0xec, 0x16, 0x74, 0x95, 0xa7, 0x40, 0x6e, 0x70, 0xaf,
	0xd9, 0x85, 0xd0, 0x78, 0xf7, 0x52, 0xf1, 0xee, 0xde, 0xc3, 0xa3, 0x3f, 0xf3, 0xe1, 0x08, 0x57,
	0xc7, 0xeb, 0x0d, 0x45, 0x1f, 0x1b, 0xda, 0x7a, 0xa9, 0x29, 0x5a, 0xd7, 0x14, 0xbd, 0xd7, 0x14,
	0x7d, 0xd6, 0x14, 0xbd, 0x7d, 0xd1, 0xd6, 0xb4, 0xd7, 0x94, 0xcd, 0xfe, 0xfb, 0xc3, 0x9e, 0x7f,
	0x07, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x7d, 0x31, 0x0e, 0xdc, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	// Version returns the API version.
	Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) Version(ctx context.Context, in *VersionRequest, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/events.v1alpha.EventService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	// Version returns the API version.
	Version(context.Context, *VersionRequest) (*VersionResponse, error)
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.v1alpha.EventService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).Version(ctx, req.(*VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "events.v1alpha.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _EventService_Version_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/galexrt/edenconfmgmt/pkg/apis/events/v1alpha/api.proto",
}
