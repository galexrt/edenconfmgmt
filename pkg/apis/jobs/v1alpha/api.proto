// Copyright 2018 Alexander Trost. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = 'proto3';

package jobs.v1alpha;
option go_package = "github.com/galexrt/edenconfmgmt/pkg/apis/jobs/v1alpha";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/galexrt/edenconfmgmt/pkg/apis/core/v1alpha/api.proto";
import "github.com/galexrt/edenconfmgmt/pkg/apis/events/v1alpha/api.proto";

option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.goproto_getters_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;

service ActionsService {
    // Version returns the API version.
    rpc Version (core.v1alpha.VersionRequest) returns (core.v1alpha.VersionResponse);
    // Get a Job.
    rpc GetJob (Job) returns (Job);
    // Add a Job.
    rpc AddJob (Job) returns (AddJobResponse);
    // Update a Job.
    rpc UpdateJob (Job) returns (UpdateJobResponse);
    // Delete a Job.
    rpc DeleteJob (Job) returns (DeleteJobResponse);
    // Watch a Job.
    rpc WatchJob (Job) returns (stream WatchJobResponse);
}

message Job {
    // Metadata for Job object.
    core.v1alpha.ObjectMetadata objectMetadata = 1;
    // Spec for Job.
    JobSpec spec = 2;
}

message JobSpec {
    // (Human readable) description for Job.
    string description = 3;
}

message AddJobResponse {}

message UpdateJobResponse {}

message DeleteJobResponse {}

message WatchJobResponse {
    // Event info for watch response.
    events.v1alpha.Event event = 1;
    // Job for watch response.
    Job job = 2;
}
