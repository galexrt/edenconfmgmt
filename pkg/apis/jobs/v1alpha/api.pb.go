// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/galexrt/edenconfmgmt/pkg/apis/jobs/v1alpha/api.proto

package v1alpha

import (
	fmt "fmt"
	v1alpha "github.com/galexrt/edenconfmgmt/pkg/apis/core/v1alpha"
	v1alpha1 "github.com/galexrt/edenconfmgmt/pkg/apis/events/v1alpha"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Job struct {
	// Metadata for Job object.
	ObjectMetadata *v1alpha.ObjectMetadata `protobuf:"bytes,1,opt,name=objectMetadata,proto3" json:"objectMetadata,omitempty"`
	// Spec for Job.
	Spec                 *JobSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062e228d6c6d51, []int{0}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetObjectMetadata() *v1alpha.ObjectMetadata {
	if m != nil {
		return m.ObjectMetadata
	}
	return nil
}

func (m *Job) GetSpec() *JobSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type JobSpec struct {
	// (Human readable) description for Job.
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobSpec) Reset()         { *m = JobSpec{} }
func (m *JobSpec) String() string { return proto.CompactTextString(m) }
func (*JobSpec) ProtoMessage()    {}
func (*JobSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062e228d6c6d51, []int{1}
}

func (m *JobSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobSpec.Unmarshal(m, b)
}
func (m *JobSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobSpec.Marshal(b, m, deterministic)
}
func (m *JobSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobSpec.Merge(m, src)
}
func (m *JobSpec) XXX_Size() int {
	return xxx_messageInfo_JobSpec.Size(m)
}
func (m *JobSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_JobSpec.DiscardUnknown(m)
}

var xxx_messageInfo_JobSpec proto.InternalMessageInfo

func (m *JobSpec) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddJobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddJobResponse) Reset()         { *m = AddJobResponse{} }
func (m *AddJobResponse) String() string { return proto.CompactTextString(m) }
func (*AddJobResponse) ProtoMessage()    {}
func (*AddJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062e228d6c6d51, []int{2}
}

func (m *AddJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddJobResponse.Unmarshal(m, b)
}
func (m *AddJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddJobResponse.Marshal(b, m, deterministic)
}
func (m *AddJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddJobResponse.Merge(m, src)
}
func (m *AddJobResponse) XXX_Size() int {
	return xxx_messageInfo_AddJobResponse.Size(m)
}
func (m *AddJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddJobResponse proto.InternalMessageInfo

type UpdateJobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateJobResponse) Reset()         { *m = UpdateJobResponse{} }
func (m *UpdateJobResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateJobResponse) ProtoMessage()    {}
func (*UpdateJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062e228d6c6d51, []int{3}
}

func (m *UpdateJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateJobResponse.Unmarshal(m, b)
}
func (m *UpdateJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateJobResponse.Marshal(b, m, deterministic)
}
func (m *UpdateJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateJobResponse.Merge(m, src)
}
func (m *UpdateJobResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateJobResponse.Size(m)
}
func (m *UpdateJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateJobResponse proto.InternalMessageInfo

type DeleteJobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteJobResponse) Reset()         { *m = DeleteJobResponse{} }
func (m *DeleteJobResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteJobResponse) ProtoMessage()    {}
func (*DeleteJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062e228d6c6d51, []int{4}
}

func (m *DeleteJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteJobResponse.Unmarshal(m, b)
}
func (m *DeleteJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteJobResponse.Marshal(b, m, deterministic)
}
func (m *DeleteJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteJobResponse.Merge(m, src)
}
func (m *DeleteJobResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteJobResponse.Size(m)
}
func (m *DeleteJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteJobResponse proto.InternalMessageInfo

type WatchJobResponse struct {
	// Event info for watch response.
	Event *v1alpha1.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// Job for watch response.
	Job                  *Job     `protobuf:"bytes,2,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchJobResponse) Reset()         { *m = WatchJobResponse{} }
func (m *WatchJobResponse) String() string { return proto.CompactTextString(m) }
func (*WatchJobResponse) ProtoMessage()    {}
func (*WatchJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f9062e228d6c6d51, []int{5}
}

func (m *WatchJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchJobResponse.Unmarshal(m, b)
}
func (m *WatchJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchJobResponse.Marshal(b, m, deterministic)
}
func (m *WatchJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchJobResponse.Merge(m, src)
}
func (m *WatchJobResponse) XXX_Size() int {
	return xxx_messageInfo_WatchJobResponse.Size(m)
}
func (m *WatchJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchJobResponse proto.InternalMessageInfo

func (m *WatchJobResponse) GetEvent() *v1alpha1.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *WatchJobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func init() {
	proto.RegisterType((*Job)(nil), "jobs.v1alpha.Job")
	proto.RegisterType((*JobSpec)(nil), "jobs.v1alpha.JobSpec")
	proto.RegisterType((*AddJobResponse)(nil), "jobs.v1alpha.AddJobResponse")
	proto.RegisterType((*UpdateJobResponse)(nil), "jobs.v1alpha.UpdateJobResponse")
	proto.RegisterType((*DeleteJobResponse)(nil), "jobs.v1alpha.DeleteJobResponse")
	proto.RegisterType((*WatchJobResponse)(nil), "jobs.v1alpha.WatchJobResponse")
}

func init() {
	proto.RegisterFile("github.com/galexrt/edenconfmgmt/pkg/apis/jobs/v1alpha/api.proto", fileDescriptor_f9062e228d6c6d51)
}

var fileDescriptor_f9062e228d6c6d51 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x8b, 0xd3, 0x40,
	0x14, 0xc6, 0x77, 0xac, 0xb6, 0xee, 0x5b, 0x29, 0xbb, 0x23, 0x0b, 0x25, 0xac, 0xb1, 0x54, 0x84,
	0x95, 0xc5, 0x89, 0xae, 0x27, 0x4f, 0xa5, 0xb2, 0x2a, 0x14, 0x44, 0xc8, 0xa2, 0x82, 0xb7, 0x99,
	0xc9, 0xdb, 0x34, 0xb5, 0xcd, 0x8c, 0x99, 0x69, 0xf1, 0xe8, 0xc9, 0xb3, 0x7f, 0xd6, 0x1e, 0x3d,
	0x7a, 0x74, 0xeb, 0x3f, 0x22, 0x99, 0xa6, 0xa5, 0x69, 0x22, 0xf4, 0x96, 0xf9, 0xcd, 0xfb, 0xde,
	0x9b, 0xf7, 0x7d, 0x81, 0x7e, 0x9c, 0xd8, 0xd1, 0x4c, 0x30, 0xa9, 0xa6, 0x41, 0xcc, 0x27, 0xf8,
	0x2d, 0xb3, 0x01, 0x46, 0x98, 0x4a, 0x95, 0x5e, 0x4d, 0xe3, 0xa9, 0x0d, 0xf4, 0x97, 0x38, 0xe0,
	0x3a, 0x31, 0xc1, 0x58, 0x09, 0x13, 0xcc, 0x9f, 0xf3, 0x89, 0x1e, 0xf1, 0x9c, 0x30, 0x9d, 0x29,
	0xab, 0xe8, 0xbd, 0x9c, 0xb3, 0x82, 0x7b, 0x4f, 0x37, 0xdb, 0xa9, 0x58, 0x05, 0xae, 0x48, 0xcc,
	0xae, 0xdc, 0xc9, 0x1d, 0xdc, 0xd7, 0x52, 0xec, 0xed, 0x3e, 0x5d, 0xaa, 0x0c, 0xab, 0xd3, 0xbd,
	0xc1, 0xce, 0x0d, 0x70, 0x8e, 0xa9, 0xad, 0x59, 0xa0, 0x37, 0x87, 0xc6, 0x50, 0x09, 0x7a, 0x01,
	0x6d, 0x25, 0xc6, 0x28, 0xed, 0x3b, 0xb4, 0x3c, 0xe2, 0x96, 0x77, 0x48, 0x97, 0x9c, 0x1e, 0x9c,
	0x9f, 0xb0, 0x7c, 0xf4, 0x6a, 0x41, 0xf6, 0xbe, 0x54, 0x13, 0x6e, 0x69, 0xe8, 0x13, 0xb8, 0x6d,
	0x34, 0xca, 0xce, 0x2d, 0xa7, 0x3d, 0x66, 0x9b, 0xe6, 0xb0, 0xa1, 0x12, 0x97, 0x1a, 0x65, 0xe8,
	0x4a, 0x7a, 0x67, 0xd0, 0x2a, 0x00, 0xed, 0xc2, 0x41, 0x84, 0x46, 0x66, 0x89, 0xb6, 0x89, 0x4a,
	0x3b, 0x8d, 0x2e, 0x39, 0xdd, 0x0f, 0x37, 0x51, 0xef, 0x10, 0xda, 0x83, 0x28, 0x1a, 0x2a, 0x11,
	0xa2, 0xd1, 0x2a, 0x35, 0xd8, 0xbb, 0x0f, 0x47, 0x1f, 0x74, 0xc4, 0x2d, 0x6e, 0xc1, 0x0b, 0x9c,
	0x60, 0x19, 0x46, 0x70, 0xf8, 0x89, 0x5b, 0x39, 0xda, 0x60, 0xf4, 0x0c, 0xee, 0x38, 0x43, 0x8a,
	0x25, 0x8f, 0xd9, 0xd2, 0x9e, 0xf5, 0x53, 0x5f, 0xe7, 0xc7, 0x70, 0x59, 0x43, 0x1f, 0x41, 0x63,
	0xac, 0x44, 0xb1, 0xd3, 0x51, 0x65, 0xa7, 0x30, 0xbf, 0x3d, 0xff, 0xd1, 0x80, 0xf6, 0x40, 0xe6,
	0x8f, 0x35, 0x97, 0x98, 0xcd, 0x13, 0x89, 0xf4, 0x0d, 0xb4, 0x3e, 0x62, 0x66, 0x12, 0x95, 0xd2,
	0x2d, 0x17, 0x0b, 0x1c, 0xe2, 0xd7, 0x19, 0x1a, 0xeb, 0x3d, 0xf8, 0xcf, 0x6d, 0xf1, 0x58, 0x06,
	0xcd, 0xb7, 0x68, 0xf3, 0x90, 0xaa, 0xc3, 0xbd, 0x2a, 0xa2, 0x2f, 0xa1, 0xb9, 0x34, 0xab, 0xae,
	0xfe, 0xa4, 0x8c, 0xca, 0xae, 0xd2, 0x3e, 0xec, 0xaf, 0x5d, 0xad, 0x53, 0x3f, 0x2c, 0xa3, 0x4a,
	0x02, 0x79, 0x83, 0x75, 0x02, 0x3b, 0x34, 0xa8, 0xa4, 0x45, 0xfb, 0x70, 0x77, 0x95, 0x56, 0x9d,
	0xde, 0x2f, 0xa3, 0xed, 0x60, 0x9f, 0x91, 0x57, 0x8f, 0xaf, 0x6f, 0x7c, 0xf2, 0xfb, 0xc6, 0xdf,
	0xfb, 0xbe, 0xf0, 0xc9, 0xf5, 0xc2, 0x27, 0xbf, 0x16, 0x3e, 0xf9, 0xb3, 0xf0, 0xc9, 0xcf, 0xbf,
	0xfe, 0xde, 0xe7, 0x56, 0xa1, 0x14, 0x4d, 0xf7, 0xf7, 0xbf, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff,
	0x53, 0xbe, 0x42, 0xe3, 0x01, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ActionsServiceClient is the client API for ActionsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActionsServiceClient interface {
	// Version returns the API version.
	Version(ctx context.Context, in *v1alpha.VersionRequest, opts ...grpc.CallOption) (*v1alpha.VersionResponse, error)
	// Get a Job.
	GetJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Job, error)
	// Add a Job.
	AddJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*AddJobResponse, error)
	// Update a Job.
	UpdateJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*UpdateJobResponse, error)
	// Delete a Job.
	DeleteJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*DeleteJobResponse, error)
	// Watch a Job.
	WatchJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (ActionsService_WatchJobClient, error)
}

type actionsServiceClient struct {
	cc *grpc.ClientConn
}

func NewActionsServiceClient(cc *grpc.ClientConn) ActionsServiceClient {
	return &actionsServiceClient{cc}
}

func (c *actionsServiceClient) Version(ctx context.Context, in *v1alpha.VersionRequest, opts ...grpc.CallOption) (*v1alpha.VersionResponse, error) {
	out := new(v1alpha.VersionResponse)
	err := c.cc.Invoke(ctx, "/jobs.v1alpha.ActionsService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) GetJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*Job, error) {
	out := new(Job)
	err := c.cc.Invoke(ctx, "/jobs.v1alpha.ActionsService/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) AddJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*AddJobResponse, error) {
	out := new(AddJobResponse)
	err := c.cc.Invoke(ctx, "/jobs.v1alpha.ActionsService/AddJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) UpdateJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*UpdateJobResponse, error) {
	out := new(UpdateJobResponse)
	err := c.cc.Invoke(ctx, "/jobs.v1alpha.ActionsService/UpdateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) DeleteJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (*DeleteJobResponse, error) {
	out := new(DeleteJobResponse)
	err := c.cc.Invoke(ctx, "/jobs.v1alpha.ActionsService/DeleteJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionsServiceClient) WatchJob(ctx context.Context, in *Job, opts ...grpc.CallOption) (ActionsService_WatchJobClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ActionsService_serviceDesc.Streams[0], "/jobs.v1alpha.ActionsService/WatchJob", opts...)
	if err != nil {
		return nil, err
	}
	x := &actionsServiceWatchJobClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ActionsService_WatchJobClient interface {
	Recv() (*WatchJobResponse, error)
	grpc.ClientStream
}

type actionsServiceWatchJobClient struct {
	grpc.ClientStream
}

func (x *actionsServiceWatchJobClient) Recv() (*WatchJobResponse, error) {
	m := new(WatchJobResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ActionsServiceServer is the server API for ActionsService service.
type ActionsServiceServer interface {
	// Version returns the API version.
	Version(context.Context, *v1alpha.VersionRequest) (*v1alpha.VersionResponse, error)
	// Get a Job.
	GetJob(context.Context, *Job) (*Job, error)
	// Add a Job.
	AddJob(context.Context, *Job) (*AddJobResponse, error)
	// Update a Job.
	UpdateJob(context.Context, *Job) (*UpdateJobResponse, error)
	// Delete a Job.
	DeleteJob(context.Context, *Job) (*DeleteJobResponse, error)
	// Watch a Job.
	WatchJob(*Job, ActionsService_WatchJobServer) error
}

func RegisterActionsServiceServer(s *grpc.Server, srv ActionsServiceServer) {
	s.RegisterService(&_ActionsService_serviceDesc, srv)
}

func _ActionsService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobs.v1alpha.ActionsService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).Version(ctx, req.(*v1alpha.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobs.v1alpha.ActionsService/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).GetJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_AddJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).AddJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobs.v1alpha.ActionsService/AddJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).AddJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_UpdateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).UpdateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobs.v1alpha.ActionsService/UpdateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).UpdateJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_DeleteJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Job)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionsServiceServer).DeleteJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jobs.v1alpha.ActionsService/DeleteJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionsServiceServer).DeleteJob(ctx, req.(*Job))
	}
	return interceptor(ctx, in, info, handler)
}

func _ActionsService_WatchJob_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Job)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ActionsServiceServer).WatchJob(m, &actionsServiceWatchJobServer{stream})
}

type ActionsService_WatchJobServer interface {
	Send(*WatchJobResponse) error
	grpc.ServerStream
}

type actionsServiceWatchJobServer struct {
	grpc.ServerStream
}

func (x *actionsServiceWatchJobServer) Send(m *WatchJobResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ActionsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jobs.v1alpha.ActionsService",
	HandlerType: (*ActionsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _ActionsService_Version_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _ActionsService_GetJob_Handler,
		},
		{
			MethodName: "AddJob",
			Handler:    _ActionsService_AddJob_Handler,
		},
		{
			MethodName: "UpdateJob",
			Handler:    _ActionsService_UpdateJob_Handler,
		},
		{
			MethodName: "DeleteJob",
			Handler:    _ActionsService_DeleteJob_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchJob",
			Handler:       _ActionsService_WatchJob_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/galexrt/edenconfmgmt/pkg/apis/jobs/v1alpha/api.proto",
}
