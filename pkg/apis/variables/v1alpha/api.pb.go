// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/galexrt/edenconfmgmt/pkg/apis/variables/v1alpha/api.proto

package v1alpha

import (
	fmt "fmt"
	v1alpha "github.com/galexrt/edenconfmgmt/pkg/apis/core/v1alpha"
	v1alpha1 "github.com/galexrt/edenconfmgmt/pkg/apis/events/v1alpha"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Variable struct {
	// Metadata for Variable object.
	Metadata *v1alpha.ObjectMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Spec for Variable.
	Spec                 *VariableSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Variable) Reset()         { *m = Variable{} }
func (m *Variable) String() string { return proto.CompactTextString(m) }
func (*Variable) ProtoMessage()    {}
func (*Variable) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d9255d344b41b48, []int{0}
}

func (m *Variable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Variable.Unmarshal(m, b)
}
func (m *Variable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Variable.Marshal(b, m, deterministic)
}
func (m *Variable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Variable.Merge(m, src)
}
func (m *Variable) XXX_Size() int {
	return xxx_messageInfo_Variable.Size(m)
}
func (m *Variable) XXX_DiscardUnknown() {
	xxx_messageInfo_Variable.DiscardUnknown(m)
}

var xxx_messageInfo_Variable proto.InternalMessageInfo

func (m *Variable) GetMetadata() *v1alpha.ObjectMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Variable) GetSpec() *VariableSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

// Variables variables file structure. This covers the "Variables File" and "'From Host' Static Variable File".
type VariableSpec struct {
	// Variables.
	Variables map[string]*any.Any `protobuf:"bytes,1,rep,name=variables,proto3" json:"variables,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Type of variable.
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VariableSpec) Reset()         { *m = VariableSpec{} }
func (m *VariableSpec) String() string { return proto.CompactTextString(m) }
func (*VariableSpec) ProtoMessage()    {}
func (*VariableSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d9255d344b41b48, []int{1}
}

func (m *VariableSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VariableSpec.Unmarshal(m, b)
}
func (m *VariableSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VariableSpec.Marshal(b, m, deterministic)
}
func (m *VariableSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VariableSpec.Merge(m, src)
}
func (m *VariableSpec) XXX_Size() int {
	return xxx_messageInfo_VariableSpec.Size(m)
}
func (m *VariableSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_VariableSpec.DiscardUnknown(m)
}

var xxx_messageInfo_VariableSpec proto.InternalMessageInfo

func (m *VariableSpec) GetVariables() map[string]*any.Any {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *VariableSpec) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type AddVariableResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddVariableResponse) Reset()         { *m = AddVariableResponse{} }
func (m *AddVariableResponse) String() string { return proto.CompactTextString(m) }
func (*AddVariableResponse) ProtoMessage()    {}
func (*AddVariableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d9255d344b41b48, []int{2}
}

func (m *AddVariableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddVariableResponse.Unmarshal(m, b)
}
func (m *AddVariableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddVariableResponse.Marshal(b, m, deterministic)
}
func (m *AddVariableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddVariableResponse.Merge(m, src)
}
func (m *AddVariableResponse) XXX_Size() int {
	return xxx_messageInfo_AddVariableResponse.Size(m)
}
func (m *AddVariableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddVariableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddVariableResponse proto.InternalMessageInfo

type UpdateVariableResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVariableResponse) Reset()         { *m = UpdateVariableResponse{} }
func (m *UpdateVariableResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateVariableResponse) ProtoMessage()    {}
func (*UpdateVariableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d9255d344b41b48, []int{3}
}

func (m *UpdateVariableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVariableResponse.Unmarshal(m, b)
}
func (m *UpdateVariableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVariableResponse.Marshal(b, m, deterministic)
}
func (m *UpdateVariableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVariableResponse.Merge(m, src)
}
func (m *UpdateVariableResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateVariableResponse.Size(m)
}
func (m *UpdateVariableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVariableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVariableResponse proto.InternalMessageInfo

type DeleteVariableResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVariableResponse) Reset()         { *m = DeleteVariableResponse{} }
func (m *DeleteVariableResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVariableResponse) ProtoMessage()    {}
func (*DeleteVariableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d9255d344b41b48, []int{4}
}

func (m *DeleteVariableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVariableResponse.Unmarshal(m, b)
}
func (m *DeleteVariableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVariableResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVariableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVariableResponse.Merge(m, src)
}
func (m *DeleteVariableResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVariableResponse.Size(m)
}
func (m *DeleteVariableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVariableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVariableResponse proto.InternalMessageInfo

type WatchVariableResponse struct {
	// Event info for watch response.
	Event *v1alpha1.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// Variable for watch response.
	Variable             *Variable `protobuf:"bytes,2,opt,name=variable,proto3" json:"variable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *WatchVariableResponse) Reset()         { *m = WatchVariableResponse{} }
func (m *WatchVariableResponse) String() string { return proto.CompactTextString(m) }
func (*WatchVariableResponse) ProtoMessage()    {}
func (*WatchVariableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d9255d344b41b48, []int{5}
}

func (m *WatchVariableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchVariableResponse.Unmarshal(m, b)
}
func (m *WatchVariableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchVariableResponse.Marshal(b, m, deterministic)
}
func (m *WatchVariableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchVariableResponse.Merge(m, src)
}
func (m *WatchVariableResponse) XXX_Size() int {
	return xxx_messageInfo_WatchVariableResponse.Size(m)
}
func (m *WatchVariableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchVariableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchVariableResponse proto.InternalMessageInfo

func (m *WatchVariableResponse) GetEvent() *v1alpha1.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *WatchVariableResponse) GetVariable() *Variable {
	if m != nil {
		return m.Variable
	}
	return nil
}

func init() {
	proto.RegisterType((*Variable)(nil), "variables.v1alpha.Variable")
	proto.RegisterType((*VariableSpec)(nil), "variables.v1alpha.VariableSpec")
	proto.RegisterMapType((map[string]*any.Any)(nil), "variables.v1alpha.VariableSpec.VariablesEntry")
	proto.RegisterType((*AddVariableResponse)(nil), "variables.v1alpha.AddVariableResponse")
	proto.RegisterType((*UpdateVariableResponse)(nil), "variables.v1alpha.UpdateVariableResponse")
	proto.RegisterType((*DeleteVariableResponse)(nil), "variables.v1alpha.DeleteVariableResponse")
	proto.RegisterType((*WatchVariableResponse)(nil), "variables.v1alpha.WatchVariableResponse")
}

func init() {
	proto.RegisterFile("github.com/galexrt/edenconfmgmt/pkg/apis/variables/v1alpha/api.proto", fileDescriptor_6d9255d344b41b48)
}

var fileDescriptor_6d9255d344b41b48 = []byte{
	// 540 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0xed, 0xb6, 0xe9, 0xf7, 0x25, 0x13, 0xa8, 0xca, 0x42, 0x50, 0x30, 0x60, 0xaa, 0x1c, 0x50,
	0x00, 0xb1, 0x86, 0xf4, 0x40, 0xd5, 0x0b, 0x0a, 0x6a, 0xe9, 0x05, 0x84, 0xb4, 0x15, 0x25, 0xe2,
	0xb6, 0x71, 0xa6, 0x4e, 0xa8, 0xe3, 0x35, 0xf6, 0x26, 0xc2, 0x07, 0x24, 0x2e, 0xdc, 0xf9, 0x51,
	0x1c, 0x7a, 0xe4, 0xc8, 0x91, 0x86, 0x3f, 0x82, 0xb2, 0xb1, 0xdd, 0xa4, 0x5d, 0x4c, 0xe1, 0xb6,
	0xb3, 0xef, 0xed, 0xf3, 0xbc, 0x79, 0x93, 0xc0, 0x8e, 0x37, 0x50, 0xfd, 0x51, 0x97, 0xb9, 0x72,
	0xe8, 0x78, 0xc2, 0xc7, 0x0f, 0x91, 0x72, 0xb0, 0x87, 0x81, 0x2b, 0x83, 0xc3, 0xa1, 0x37, 0x54,
	0x4e, 0x78, 0xe4, 0x39, 0x22, 0x1c, 0xc4, 0xce, 0x58, 0x44, 0x03, 0xd1, 0xf5, 0x31, 0x76, 0xc6,
	0x8f, 0x85, 0x1f, 0xf6, 0xc5, 0xf4, 0x9a, 0x85, 0x91, 0x54, 0x92, 0x5e, 0xc9, 0x41, 0x96, 0x82,
	0xd6, 0xc3, 0x79, 0x61, 0xe9, 0x49, 0x47, 0x33, 0xbb, 0xa3, 0x43, 0x5d, 0xe9, 0x42, 0x9f, 0x66,
	0x0a, 0xd6, 0x0d, 0x4f, 0x4a, 0xcf, 0xc7, 0x53, 0x96, 0x08, 0x92, 0x14, 0x7a, 0x7a, 0xe1, 0x16,
	0x5d, 0x19, 0xe1, 0xf9, 0xee, 0xac, 0xf6, 0x85, 0x05, 0x70, 0x8c, 0x81, 0x32, 0x18, 0x6c, 0x24,
	0x50, 0x3e, 0x48, 0x2d, 0xd2, 0x2d, 0x28, 0x0f, 0x51, 0x89, 0x9e, 0x50, 0xa2, 0x4e, 0x36, 0x48,
	0xb3, 0xda, 0xba, 0xc5, 0xa6, 0x5f, 0xce, 0xac, 0xb3, 0x57, 0xdd, 0x77, 0xe8, 0xaa, 0x97, 0x29,
	0x87, 0xe7, 0x6c, 0xba, 0x09, 0xa5, 0x38, 0x44, 0xb7, 0xbe, 0xac, 0x5f, 0xdd, 0x61, 0xe7, 0xa6,
	0xc6, 0xb2, 0x8f, 0xec, 0x87, 0xe8, 0x72, 0x4d, 0x6e, 0x7c, 0x25, 0x70, 0x69, 0xfe, 0x9a, 0xbe,
	0x80, 0x4a, 0xfe, 0xb0, 0x4e, 0x36, 0x56, 0x9a, 0xd5, 0x16, 0xfb, 0x83, 0x54, 0x5e, 0xc4, 0xbb,
	0x81, 0x8a, 0x12, 0x7e, 0x2a, 0x40, 0x29, 0x94, 0x54, 0x12, 0xa2, 0xee, 0xa9, 0xc2, 0xf5, 0xd9,
	0xe2, 0xb0, 0xb6, 0xf8, 0x80, 0xae, 0xc3, 0xca, 0x11, 0x26, 0xda, 0x6e, 0x85, 0x4f, 0x8f, 0xf4,
	0x3e, 0xac, 0x8e, 0x85, 0x3f, 0xc2, 0xd4, 0xcc, 0x35, 0x36, 0x0b, 0x90, 0x65, 0x01, 0xb2, 0x76,
	0x90, 0xf0, 0x19, 0x65, 0x7b, 0x79, 0x8b, 0x34, 0x6a, 0x70, 0xb5, 0xdd, 0xeb, 0x65, 0xb2, 0x1c,
	0xe3, 0x50, 0x06, 0x31, 0x36, 0xea, 0x70, 0xfd, 0x75, 0xd8, 0x13, 0x0a, 0x4d, 0xc8, 0x0e, 0xfa,
	0x68, 0x40, 0x3e, 0x42, 0xed, 0x8d, 0x50, 0x6e, 0xff, 0x2c, 0x40, 0x1f, 0xc0, 0xaa, 0x4e, 0x30,
	0x8d, 0xa5, 0xc6, 0x66, 0x79, 0xe6, 0x23, 0xd9, 0x9d, 0x96, 0x7c, 0xc6, 0xa1, 0x4f, 0xa0, 0x9c,
	0x4d, 0x21, 0xf5, 0x70, 0xb3, 0x60, 0x8a, 0x3c, 0x27, 0xb7, 0x3e, 0x97, 0x60, 0x3d, 0x1f, 0xcf,
	0x3e, 0x46, 0xe3, 0x81, 0x8b, 0xf4, 0x39, 0xfc, 0x7f, 0x80, 0x51, 0x3c, 0x90, 0x01, 0x3d, 0xb3,
	0x0d, 0xe9, 0x35, 0xc7, 0xf7, 0x23, 0x8c, 0x95, 0x75, 0xfb, 0x37, 0x68, 0x6a, 0x61, 0x0f, 0xaa,
	0x7b, 0xa8, 0xf2, 0x5d, 0x2b, 0x6a, 0xc9, 0x2a, 0x02, 0x29, 0x87, 0xea, 0xdc, 0xbc, 0x8b, 0x85,
	0xee, 0x1a, 0x40, 0x43, 0x58, 0xb4, 0x03, 0x6b, 0x8b, 0x61, 0x15, 0xcb, 0xde, 0x33, 0x80, 0xe6,
	0xb0, 0xa7, 0xca, 0x8b, 0x61, 0xff, 0xbd, 0xb2, 0x79, 0x59, 0x68, 0x07, 0x2e, 0x2f, 0x2c, 0x4b,
	0xb1, 0x70, 0xd3, 0x00, 0x1a, 0x77, 0xed, 0x11, 0x79, 0xd6, 0x39, 0x3e, 0xb1, 0xc9, 0xf7, 0x13,
	0x7b, 0xe9, 0xd3, 0xc4, 0x26, 0xc7, 0x13, 0x9b, 0x7c, 0x9b, 0xd8, 0xe4, 0xc7, 0xc4, 0x26, 0x5f,
	0x7e, 0xda, 0x4b, 0x6f, 0xb7, 0xff, 0xfd, 0x8f, 0xb5, 0xfb, 0x9f, 0xfe, 0x11, 0x6d, 0xfe, 0x0a,
	0x00, 0x00, 0xff, 0xff, 0x0f, 0x6a, 0xcd, 0x70, 0x9d, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VariablesServiceClient is the client API for VariablesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VariablesServiceClient interface {
	// Version returns the API version.
	Version(ctx context.Context, in *v1alpha.VersionRequest, opts ...grpc.CallOption) (*v1alpha.VersionResponse, error)
	// Get a Variable.
	GetVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (*Variable, error)
	// Add a Variable.
	AddVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (*AddVariableResponse, error)
	// Update a Variable.
	UpdateVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (*UpdateVariableResponse, error)
	// Delete a Variable.
	DeleteVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (*DeleteVariableResponse, error)
	// Watch a Variable.
	WatchVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (VariablesService_WatchVariableClient, error)
}

type variablesServiceClient struct {
	cc *grpc.ClientConn
}

func NewVariablesServiceClient(cc *grpc.ClientConn) VariablesServiceClient {
	return &variablesServiceClient{cc}
}

func (c *variablesServiceClient) Version(ctx context.Context, in *v1alpha.VersionRequest, opts ...grpc.CallOption) (*v1alpha.VersionResponse, error) {
	out := new(v1alpha.VersionResponse)
	err := c.cc.Invoke(ctx, "/variables.v1alpha.VariablesService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variablesServiceClient) GetVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (*Variable, error) {
	out := new(Variable)
	err := c.cc.Invoke(ctx, "/variables.v1alpha.VariablesService/GetVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variablesServiceClient) AddVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (*AddVariableResponse, error) {
	out := new(AddVariableResponse)
	err := c.cc.Invoke(ctx, "/variables.v1alpha.VariablesService/AddVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variablesServiceClient) UpdateVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (*UpdateVariableResponse, error) {
	out := new(UpdateVariableResponse)
	err := c.cc.Invoke(ctx, "/variables.v1alpha.VariablesService/UpdateVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variablesServiceClient) DeleteVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (*DeleteVariableResponse, error) {
	out := new(DeleteVariableResponse)
	err := c.cc.Invoke(ctx, "/variables.v1alpha.VariablesService/DeleteVariable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *variablesServiceClient) WatchVariable(ctx context.Context, in *Variable, opts ...grpc.CallOption) (VariablesService_WatchVariableClient, error) {
	stream, err := c.cc.NewStream(ctx, &_VariablesService_serviceDesc.Streams[0], "/variables.v1alpha.VariablesService/WatchVariable", opts...)
	if err != nil {
		return nil, err
	}
	x := &variablesServiceWatchVariableClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type VariablesService_WatchVariableClient interface {
	Recv() (*WatchVariableResponse, error)
	grpc.ClientStream
}

type variablesServiceWatchVariableClient struct {
	grpc.ClientStream
}

func (x *variablesServiceWatchVariableClient) Recv() (*WatchVariableResponse, error) {
	m := new(WatchVariableResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// VariablesServiceServer is the server API for VariablesService service.
type VariablesServiceServer interface {
	// Version returns the API version.
	Version(context.Context, *v1alpha.VersionRequest) (*v1alpha.VersionResponse, error)
	// Get a Variable.
	GetVariable(context.Context, *Variable) (*Variable, error)
	// Add a Variable.
	AddVariable(context.Context, *Variable) (*AddVariableResponse, error)
	// Update a Variable.
	UpdateVariable(context.Context, *Variable) (*UpdateVariableResponse, error)
	// Delete a Variable.
	DeleteVariable(context.Context, *Variable) (*DeleteVariableResponse, error)
	// Watch a Variable.
	WatchVariable(*Variable, VariablesService_WatchVariableServer) error
}

func RegisterVariablesServiceServer(s *grpc.Server, srv VariablesServiceServer) {
	s.RegisterService(&_VariablesService_serviceDesc, srv)
}

func _VariablesService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariablesServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/variables.v1alpha.VariablesService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariablesServiceServer).Version(ctx, req.(*v1alpha.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VariablesService_GetVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Variable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariablesServiceServer).GetVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/variables.v1alpha.VariablesService/GetVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariablesServiceServer).GetVariable(ctx, req.(*Variable))
	}
	return interceptor(ctx, in, info, handler)
}

func _VariablesService_AddVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Variable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariablesServiceServer).AddVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/variables.v1alpha.VariablesService/AddVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariablesServiceServer).AddVariable(ctx, req.(*Variable))
	}
	return interceptor(ctx, in, info, handler)
}

func _VariablesService_UpdateVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Variable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariablesServiceServer).UpdateVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/variables.v1alpha.VariablesService/UpdateVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariablesServiceServer).UpdateVariable(ctx, req.(*Variable))
	}
	return interceptor(ctx, in, info, handler)
}

func _VariablesService_DeleteVariable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Variable)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VariablesServiceServer).DeleteVariable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/variables.v1alpha.VariablesService/DeleteVariable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VariablesServiceServer).DeleteVariable(ctx, req.(*Variable))
	}
	return interceptor(ctx, in, info, handler)
}

func _VariablesService_WatchVariable_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Variable)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(VariablesServiceServer).WatchVariable(m, &variablesServiceWatchVariableServer{stream})
}

type VariablesService_WatchVariableServer interface {
	Send(*WatchVariableResponse) error
	grpc.ServerStream
}

type variablesServiceWatchVariableServer struct {
	grpc.ServerStream
}

func (x *variablesServiceWatchVariableServer) Send(m *WatchVariableResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _VariablesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "variables.v1alpha.VariablesService",
	HandlerType: (*VariablesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _VariablesService_Version_Handler,
		},
		{
			MethodName: "GetVariable",
			Handler:    _VariablesService_GetVariable_Handler,
		},
		{
			MethodName: "AddVariable",
			Handler:    _VariablesService_AddVariable_Handler,
		},
		{
			MethodName: "UpdateVariable",
			Handler:    _VariablesService_UpdateVariable_Handler,
		},
		{
			MethodName: "DeleteVariable",
			Handler:    _VariablesService_DeleteVariable_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchVariable",
			Handler:       _VariablesService_WatchVariable_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/galexrt/edenconfmgmt/pkg/apis/variables/v1alpha/api.proto",
}
