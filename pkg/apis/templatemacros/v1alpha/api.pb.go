// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/galexrt/edenconfmgmt/pkg/apis/templatemacros/v1alpha/api.proto

package v1alpha

import (
	fmt "fmt"
	v1alpha "github.com/galexrt/edenconfmgmt/pkg/apis/core/v1alpha"
	v1alpha1 "github.com/galexrt/edenconfmgmt/pkg/apis/events/v1alpha"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DataStore templatemacros for the data store.
type TemplateMacros struct {
	// Metadata for TemplateMacros object.
	ObjectMetadata *v1alpha.ObjectMetadata `protobuf:"bytes,1,opt,name=objectMetadata,proto3" json:"objectMetadata,omitempty"`
	// Spec for TemplateMacros.
	Spec                 *TemplateMacrosSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TemplateMacros) Reset()         { *m = TemplateMacros{} }
func (m *TemplateMacros) String() string { return proto.CompactTextString(m) }
func (*TemplateMacros) ProtoMessage()    {}
func (*TemplateMacros) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6f457176fb6fb5, []int{0}
}

func (m *TemplateMacros) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemplateMacros.Unmarshal(m, b)
}
func (m *TemplateMacros) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemplateMacros.Marshal(b, m, deterministic)
}
func (m *TemplateMacros) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateMacros.Merge(m, src)
}
func (m *TemplateMacros) XXX_Size() int {
	return xxx_messageInfo_TemplateMacros.Size(m)
}
func (m *TemplateMacros) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateMacros.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateMacros proto.InternalMessageInfo

func (m *TemplateMacros) GetObjectMetadata() *v1alpha.ObjectMetadata {
	if m != nil {
		return m.ObjectMetadata
	}
	return nil
}

func (m *TemplateMacros) GetSpec() *TemplateMacrosSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type TemplateMacrosSpec struct {
	TemplateMacros       []*TemplateMacro `protobuf:"bytes,1,rep,name=templateMacros,proto3" json:"templateMacros,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TemplateMacrosSpec) Reset()         { *m = TemplateMacrosSpec{} }
func (m *TemplateMacrosSpec) String() string { return proto.CompactTextString(m) }
func (*TemplateMacrosSpec) ProtoMessage()    {}
func (*TemplateMacrosSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6f457176fb6fb5, []int{1}
}

func (m *TemplateMacrosSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemplateMacrosSpec.Unmarshal(m, b)
}
func (m *TemplateMacrosSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemplateMacrosSpec.Marshal(b, m, deterministic)
}
func (m *TemplateMacrosSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateMacrosSpec.Merge(m, src)
}
func (m *TemplateMacrosSpec) XXX_Size() int {
	return xxx_messageInfo_TemplateMacrosSpec.Size(m)
}
func (m *TemplateMacrosSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateMacrosSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateMacrosSpec proto.InternalMessageInfo

func (m *TemplateMacrosSpec) GetTemplateMacros() []*TemplateMacro {
	if m != nil {
		return m.TemplateMacros
	}
	return nil
}

type TemplateMacro struct {
	// Action.
	Action string `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	// Parameters.
	Parameters           []*any.Any `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TemplateMacro) Reset()         { *m = TemplateMacro{} }
func (m *TemplateMacro) String() string { return proto.CompactTextString(m) }
func (*TemplateMacro) ProtoMessage()    {}
func (*TemplateMacro) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6f457176fb6fb5, []int{2}
}

func (m *TemplateMacro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TemplateMacro.Unmarshal(m, b)
}
func (m *TemplateMacro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TemplateMacro.Marshal(b, m, deterministic)
}
func (m *TemplateMacro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateMacro.Merge(m, src)
}
func (m *TemplateMacro) XXX_Size() int {
	return xxx_messageInfo_TemplateMacro.Size(m)
}
func (m *TemplateMacro) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateMacro.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateMacro proto.InternalMessageInfo

func (m *TemplateMacro) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *TemplateMacro) GetParameters() []*any.Any {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type AddTemplateMacrosResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTemplateMacrosResponse) Reset()         { *m = AddTemplateMacrosResponse{} }
func (m *AddTemplateMacrosResponse) String() string { return proto.CompactTextString(m) }
func (*AddTemplateMacrosResponse) ProtoMessage()    {}
func (*AddTemplateMacrosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6f457176fb6fb5, []int{3}
}

func (m *AddTemplateMacrosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTemplateMacrosResponse.Unmarshal(m, b)
}
func (m *AddTemplateMacrosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTemplateMacrosResponse.Marshal(b, m, deterministic)
}
func (m *AddTemplateMacrosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTemplateMacrosResponse.Merge(m, src)
}
func (m *AddTemplateMacrosResponse) XXX_Size() int {
	return xxx_messageInfo_AddTemplateMacrosResponse.Size(m)
}
func (m *AddTemplateMacrosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTemplateMacrosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTemplateMacrosResponse proto.InternalMessageInfo

type UpdateTemplateMacrosResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTemplateMacrosResponse) Reset()         { *m = UpdateTemplateMacrosResponse{} }
func (m *UpdateTemplateMacrosResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTemplateMacrosResponse) ProtoMessage()    {}
func (*UpdateTemplateMacrosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6f457176fb6fb5, []int{4}
}

func (m *UpdateTemplateMacrosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTemplateMacrosResponse.Unmarshal(m, b)
}
func (m *UpdateTemplateMacrosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTemplateMacrosResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTemplateMacrosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTemplateMacrosResponse.Merge(m, src)
}
func (m *UpdateTemplateMacrosResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTemplateMacrosResponse.Size(m)
}
func (m *UpdateTemplateMacrosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTemplateMacrosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTemplateMacrosResponse proto.InternalMessageInfo

type DeleteTemplateMacrosResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTemplateMacrosResponse) Reset()         { *m = DeleteTemplateMacrosResponse{} }
func (m *DeleteTemplateMacrosResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTemplateMacrosResponse) ProtoMessage()    {}
func (*DeleteTemplateMacrosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6f457176fb6fb5, []int{5}
}

func (m *DeleteTemplateMacrosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTemplateMacrosResponse.Unmarshal(m, b)
}
func (m *DeleteTemplateMacrosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTemplateMacrosResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTemplateMacrosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTemplateMacrosResponse.Merge(m, src)
}
func (m *DeleteTemplateMacrosResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTemplateMacrosResponse.Size(m)
}
func (m *DeleteTemplateMacrosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTemplateMacrosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTemplateMacrosResponse proto.InternalMessageInfo

type WatchTemplateMacrosResponse struct {
	// Event info for watch response.
	Event *v1alpha1.Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	// TemplateMacros for watch response.
	TemplateMacros       *TemplateMacros `protobuf:"bytes,2,opt,name=TemplateMacros,proto3" json:"TemplateMacros,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WatchTemplateMacrosResponse) Reset()         { *m = WatchTemplateMacrosResponse{} }
func (m *WatchTemplateMacrosResponse) String() string { return proto.CompactTextString(m) }
func (*WatchTemplateMacrosResponse) ProtoMessage()    {}
func (*WatchTemplateMacrosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab6f457176fb6fb5, []int{6}
}

func (m *WatchTemplateMacrosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchTemplateMacrosResponse.Unmarshal(m, b)
}
func (m *WatchTemplateMacrosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchTemplateMacrosResponse.Marshal(b, m, deterministic)
}
func (m *WatchTemplateMacrosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchTemplateMacrosResponse.Merge(m, src)
}
func (m *WatchTemplateMacrosResponse) XXX_Size() int {
	return xxx_messageInfo_WatchTemplateMacrosResponse.Size(m)
}
func (m *WatchTemplateMacrosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchTemplateMacrosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchTemplateMacrosResponse proto.InternalMessageInfo

func (m *WatchTemplateMacrosResponse) GetEvent() *v1alpha1.Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *WatchTemplateMacrosResponse) GetTemplateMacros() *TemplateMacros {
	if m != nil {
		return m.TemplateMacros
	}
	return nil
}

func init() {
	proto.RegisterType((*TemplateMacros)(nil), "templatemacros.v1alpha.TemplateMacros")
	proto.RegisterType((*TemplateMacrosSpec)(nil), "templatemacros.v1alpha.TemplateMacrosSpec")
	proto.RegisterType((*TemplateMacro)(nil), "templatemacros.v1alpha.TemplateMacro")
	proto.RegisterType((*AddTemplateMacrosResponse)(nil), "templatemacros.v1alpha.AddTemplateMacrosResponse")
	proto.RegisterType((*UpdateTemplateMacrosResponse)(nil), "templatemacros.v1alpha.UpdateTemplateMacrosResponse")
	proto.RegisterType((*DeleteTemplateMacrosResponse)(nil), "templatemacros.v1alpha.DeleteTemplateMacrosResponse")
	proto.RegisterType((*WatchTemplateMacrosResponse)(nil), "templatemacros.v1alpha.WatchTemplateMacrosResponse")
}

func init() {
	proto.RegisterFile("github.com/galexrt/edenconfmgmt/pkg/apis/templatemacros/v1alpha/api.proto", fileDescriptor_ab6f457176fb6fb5)
}

var fileDescriptor_ab6f457176fb6fb5 = []byte{
	// 534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0x4d, 0x6f, 0xd3, 0x40,
	0x10, 0xed, 0x16, 0x5a, 0xc4, 0x54, 0x44, 0xea, 0x52, 0xa2, 0x34, 0x2d, 0x56, 0x65, 0x09, 0x54,
	0x81, 0x58, 0xd3, 0xb4, 0x67, 0xaa, 0xa0, 0x02, 0xe2, 0x10, 0x90, 0x5c, 0x3e, 0x24, 0xa4, 0x1e,
	0x36, 0xeb, 0xa9, 0x13, 0xb0, 0xbd, 0x8b, 0xbd, 0x89, 0xe8, 0x8d, 0x9f, 0xc0, 0x09, 0x24, 0x7e,
	0x51, 0x8f, 0x1c, 0x39, 0xd2, 0xf0, 0x47, 0x90, 0x37, 0x2e, 0xad, 0x1d, 0x3b, 0xb2, 0xd4, 0x9b,
	0x67, 0xe7, 0xcd, 0xbe, 0x99, 0x79, 0xcf, 0x36, 0xbc, 0xf4, 0x87, 0x7a, 0x30, 0xea, 0x33, 0x21,
	0x43, 0xc7, 0xe7, 0x01, 0x7e, 0x89, 0xb5, 0x83, 0x1e, 0x46, 0x42, 0x46, 0xc7, 0xa1, 0x1f, 0x6a,
	0x47, 0x7d, 0xf2, 0x1d, 0xae, 0x86, 0x89, 0xa3, 0x31, 0x54, 0x01, 0xd7, 0x18, 0x72, 0x11, 0xcb,
	0xc4, 0x19, 0xef, 0xf0, 0x40, 0x0d, 0x78, 0x9a, 0x63, 0x2a, 0x96, 0x5a, 0xd2, 0x66, 0x1e, 0xc1,
	0x32, 0x44, 0xfb, 0xd1, 0x65, 0x0a, 0xe9, 0x4b, 0xc7, 0xc0, 0xfb, 0xa3, 0x63, 0x13, 0x99, 0xc0,
	0x3c, 0x4d, 0xaf, 0x69, 0xaf, 0xfb, 0x52, 0xfa, 0x01, 0x5e, 0xa0, 0x78, 0x74, 0x92, 0xa5, 0xf6,
	0x6b, 0x37, 0x2b, 0x64, 0x8c, 0xb3, 0x2d, 0xb6, 0xbb, 0xb5, 0x2f, 0xc0, 0x31, 0x46, 0xba, 0x64,
	0x4a, 0xfb, 0x3b, 0x81, 0xc6, 0x9b, 0x6c, 0xd0, 0x9e, 0x19, 0x94, 0x1e, 0x40, 0x43, 0xf6, 0x3f,
	0xa2, 0xd0, 0x3d, 0xd4, 0xdc, 0xe3, 0x9a, 0xb7, 0xc8, 0x16, 0xd9, 0x5e, 0xe9, 0x6c, 0xb2, 0xb4,
	0x8d, 0xf3, 0x3d, 0xb0, 0xd7, 0x39, 0x8c, 0x5b, 0xa8, 0xa1, 0x4f, 0xe0, 0x7a, 0xa2, 0x50, 0xb4,
	0x16, 0x4d, 0xed, 0x03, 0x56, 0xbe, 0x4d, 0x96, 0xe7, 0x3e, 0x54, 0x28, 0x5c, 0x53, 0x67, 0x0b,
	0xa0, 0xb3, 0x39, 0xda, 0x83, 0x86, 0xce, 0x9d, 0xb6, 0xc8, 0xd6, 0xb5, 0xed, 0x95, 0xce, 0xbd,
	0x5a, 0xf7, 0xbb, 0x85, 0x62, 0xfb, 0x08, 0x6e, 0xe5, 0x00, 0xb4, 0x09, 0xcb, 0x5c, 0xe8, 0xa1,
	0x8c, 0xcc, 0xcc, 0x37, 0xdd, 0x2c, 0xa2, 0x7b, 0x00, 0x8a, 0xc7, 0x3c, 0x44, 0x8d, 0x71, 0xd2,
	0x5a, 0x34, 0x9c, 0x6b, 0x6c, 0x2a, 0x2d, 0x3b, 0x97, 0x96, 0x75, 0xa3, 0x13, 0xf7, 0x12, 0xce,
	0xde, 0x80, 0xf5, 0xae, 0xe7, 0xe5, 0xc7, 0x70, 0x31, 0x51, 0x32, 0x4a, 0xd0, 0xb6, 0x60, 0xf3,
	0xad, 0xf2, 0xb8, 0xc6, 0xea, 0xfc, 0x01, 0x06, 0x58, 0x99, 0xff, 0x49, 0x60, 0xe3, 0x3d, 0xd7,
	0x62, 0x50, 0x9e, 0xa7, 0x0f, 0x61, 0xc9, 0xa8, 0x9e, 0xa9, 0x77, 0x87, 0x4d, 0x3d, 0xf0, 0x7f,
	0x33, 0xcf, 0xd2, 0xd0, 0x9d, 0x62, 0xe8, 0xab, 0xa2, 0x0b, 0x32, 0xdd, 0xee, 0xd7, 0xd3, 0xcd,
	0x2d, 0x54, 0x77, 0x7e, 0x2c, 0x41, 0x33, 0x7f, 0x94, 0x1c, 0x62, 0x3c, 0x1e, 0x0a, 0xa4, 0xcf,
	0xe1, 0xc6, 0x3b, 0x8c, 0x93, 0x74, 0xab, 0x05, 0x47, 0x65, 0xc7, 0x2e, 0x7e, 0x1e, 0x61, 0xa2,
	0xdb, 0x77, 0x2b, 0xb2, 0xd9, 0x7c, 0x02, 0x56, 0x5f, 0xa0, 0x2e, 0x78, 0xb7, 0x66, 0xbf, 0xed,
	0x9a, 0x38, 0x1a, 0xc1, 0xea, 0x8c, 0x82, 0xb5, 0x49, 0x76, 0xaa, 0x70, 0x95, 0xa6, 0xa0, 0x1a,
	0xd6, 0xca, 0x4c, 0x51, 0x9b, 0x72, 0xaf, 0x0a, 0x37, 0xcf, 0x6a, 0x29, 0x6b, 0x99, 0xd5, 0xae,
	0xce, 0x3a, 0xcf, 0xc0, 0x54, 0xc3, 0xed, 0x12, 0xff, 0xd6, 0x26, 0xdd, 0xad, 0xc2, 0xcd, 0x79,
	0x29, 0x1e, 0x93, 0xa7, 0x47, 0xa7, 0x67, 0x16, 0xf9, 0x7d, 0x66, 0x2d, 0x7c, 0x9d, 0x58, 0xe4,
	0x74, 0x62, 0x91, 0x5f, 0x13, 0x8b, 0xfc, 0x99, 0x58, 0xe4, 0xdb, 0x5f, 0x6b, 0xe1, 0xc3, 0xfe,
	0x15, 0xff, 0x1f, 0xfd, 0x65, 0xf3, 0x31, 0xd8, 0xfd, 0x17, 0x00, 0x00, 0xff, 0xff, 0x3c, 0xbb,
	0x64, 0x85, 0x89, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TemplateMacrossServiceClient is the client API for TemplateMacrossService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TemplateMacrossServiceClient interface {
	// Version returns the API version.
	Version(ctx context.Context, in *v1alpha.VersionRequest, opts ...grpc.CallOption) (*v1alpha.VersionResponse, error)
	// Get a TemplateMacros.
	GetTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (*TemplateMacros, error)
	// Add a TemplateMacros.
	AddTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (*AddTemplateMacrosResponse, error)
	// Update a TemplateMacros.
	UpdateTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (*UpdateTemplateMacrosResponse, error)
	// Delete a TemplateMacros.
	DeleteTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (*DeleteTemplateMacrosResponse, error)
	// Watch a TemplateMacros.
	WatchTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (TemplateMacrossService_WatchTemplateMacrosClient, error)
}

type templateMacrossServiceClient struct {
	cc *grpc.ClientConn
}

func NewTemplateMacrossServiceClient(cc *grpc.ClientConn) TemplateMacrossServiceClient {
	return &templateMacrossServiceClient{cc}
}

func (c *templateMacrossServiceClient) Version(ctx context.Context, in *v1alpha.VersionRequest, opts ...grpc.CallOption) (*v1alpha.VersionResponse, error) {
	out := new(v1alpha.VersionResponse)
	err := c.cc.Invoke(ctx, "/templatemacros.v1alpha.TemplateMacrossService/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateMacrossServiceClient) GetTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (*TemplateMacros, error) {
	out := new(TemplateMacros)
	err := c.cc.Invoke(ctx, "/templatemacros.v1alpha.TemplateMacrossService/GetTemplateMacros", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateMacrossServiceClient) AddTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (*AddTemplateMacrosResponse, error) {
	out := new(AddTemplateMacrosResponse)
	err := c.cc.Invoke(ctx, "/templatemacros.v1alpha.TemplateMacrossService/AddTemplateMacros", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateMacrossServiceClient) UpdateTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (*UpdateTemplateMacrosResponse, error) {
	out := new(UpdateTemplateMacrosResponse)
	err := c.cc.Invoke(ctx, "/templatemacros.v1alpha.TemplateMacrossService/UpdateTemplateMacros", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateMacrossServiceClient) DeleteTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (*DeleteTemplateMacrosResponse, error) {
	out := new(DeleteTemplateMacrosResponse)
	err := c.cc.Invoke(ctx, "/templatemacros.v1alpha.TemplateMacrossService/DeleteTemplateMacros", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *templateMacrossServiceClient) WatchTemplateMacros(ctx context.Context, in *TemplateMacros, opts ...grpc.CallOption) (TemplateMacrossService_WatchTemplateMacrosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TemplateMacrossService_serviceDesc.Streams[0], "/templatemacros.v1alpha.TemplateMacrossService/WatchTemplateMacros", opts...)
	if err != nil {
		return nil, err
	}
	x := &templateMacrossServiceWatchTemplateMacrosClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TemplateMacrossService_WatchTemplateMacrosClient interface {
	Recv() (*WatchTemplateMacrosResponse, error)
	grpc.ClientStream
}

type templateMacrossServiceWatchTemplateMacrosClient struct {
	grpc.ClientStream
}

func (x *templateMacrossServiceWatchTemplateMacrosClient) Recv() (*WatchTemplateMacrosResponse, error) {
	m := new(WatchTemplateMacrosResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TemplateMacrossServiceServer is the server API for TemplateMacrossService service.
type TemplateMacrossServiceServer interface {
	// Version returns the API version.
	Version(context.Context, *v1alpha.VersionRequest) (*v1alpha.VersionResponse, error)
	// Get a TemplateMacros.
	GetTemplateMacros(context.Context, *TemplateMacros) (*TemplateMacros, error)
	// Add a TemplateMacros.
	AddTemplateMacros(context.Context, *TemplateMacros) (*AddTemplateMacrosResponse, error)
	// Update a TemplateMacros.
	UpdateTemplateMacros(context.Context, *TemplateMacros) (*UpdateTemplateMacrosResponse, error)
	// Delete a TemplateMacros.
	DeleteTemplateMacros(context.Context, *TemplateMacros) (*DeleteTemplateMacrosResponse, error)
	// Watch a TemplateMacros.
	WatchTemplateMacros(*TemplateMacros, TemplateMacrossService_WatchTemplateMacrosServer) error
}

func RegisterTemplateMacrossServiceServer(s *grpc.Server, srv TemplateMacrossServiceServer) {
	s.RegisterService(&_TemplateMacrossService_serviceDesc, srv)
}

func _TemplateMacrossService_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateMacrossServiceServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templatemacros.v1alpha.TemplateMacrossService/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateMacrossServiceServer).Version(ctx, req.(*v1alpha.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateMacrossService_GetTemplateMacros_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TemplateMacros)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateMacrossServiceServer).GetTemplateMacros(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templatemacros.v1alpha.TemplateMacrossService/GetTemplateMacros",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateMacrossServiceServer).GetTemplateMacros(ctx, req.(*TemplateMacros))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateMacrossService_AddTemplateMacros_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TemplateMacros)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateMacrossServiceServer).AddTemplateMacros(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templatemacros.v1alpha.TemplateMacrossService/AddTemplateMacros",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateMacrossServiceServer).AddTemplateMacros(ctx, req.(*TemplateMacros))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateMacrossService_UpdateTemplateMacros_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TemplateMacros)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateMacrossServiceServer).UpdateTemplateMacros(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templatemacros.v1alpha.TemplateMacrossService/UpdateTemplateMacros",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateMacrossServiceServer).UpdateTemplateMacros(ctx, req.(*TemplateMacros))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateMacrossService_DeleteTemplateMacros_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TemplateMacros)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TemplateMacrossServiceServer).DeleteTemplateMacros(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/templatemacros.v1alpha.TemplateMacrossService/DeleteTemplateMacros",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TemplateMacrossServiceServer).DeleteTemplateMacros(ctx, req.(*TemplateMacros))
	}
	return interceptor(ctx, in, info, handler)
}

func _TemplateMacrossService_WatchTemplateMacros_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TemplateMacros)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TemplateMacrossServiceServer).WatchTemplateMacros(m, &templateMacrossServiceWatchTemplateMacrosServer{stream})
}

type TemplateMacrossService_WatchTemplateMacrosServer interface {
	Send(*WatchTemplateMacrosResponse) error
	grpc.ServerStream
}

type templateMacrossServiceWatchTemplateMacrosServer struct {
	grpc.ServerStream
}

func (x *templateMacrossServiceWatchTemplateMacrosServer) Send(m *WatchTemplateMacrosResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _TemplateMacrossService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "templatemacros.v1alpha.TemplateMacrossService",
	HandlerType: (*TemplateMacrossServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Version",
			Handler:    _TemplateMacrossService_Version_Handler,
		},
		{
			MethodName: "GetTemplateMacros",
			Handler:    _TemplateMacrossService_GetTemplateMacros_Handler,
		},
		{
			MethodName: "AddTemplateMacros",
			Handler:    _TemplateMacrossService_AddTemplateMacros_Handler,
		},
		{
			MethodName: "UpdateTemplateMacros",
			Handler:    _TemplateMacrossService_UpdateTemplateMacros_Handler,
		},
		{
			MethodName: "DeleteTemplateMacros",
			Handler:    _TemplateMacrossService_DeleteTemplateMacros_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchTemplateMacros",
			Handler:       _TemplateMacrossService_WatchTemplateMacros_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/galexrt/edenconfmgmt/pkg/apis/templatemacros/v1alpha/api.proto",
}
