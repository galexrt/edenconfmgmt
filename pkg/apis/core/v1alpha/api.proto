// Copyright 2018 Alexander Trost. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = 'proto3';

package core.v1alpha;
option go_package = "github.com/galexrt/edenconfmgmt/pkg/apis/core/v1alpha";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.goproto_getters_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;

message ObjectMetadata {
    // ID of object.
    string id = 1;
    // Name of object.
    string name = 2;
    // Labels of object.
    map<string, string> labels = 3;
    // Annotations of object.
    map<string, string> annotations = 4;
}

message VersionRequest {}

message VersionResponse {
    // Semversion compatible version number.
    string version = 1;
    // Semversion major number.
    int64 major = 2;
    // Semversion minor number.
    int64 minor = 3;
    // Semversion patch number.
    int64 patch = 4;
    // API state (e.g., alpha, beta, stable).
    string state = 5;
}

message Include {
    // Name of include (if no paths are given, will be used as file name/path).
    string name = 1;
    // List of paths.
    repeated string paths = 2;
}

message Conditions {
    // `when` condition.
    Condition when = 1;
    // `success` condition.
    Condition success = 2;
}

message Condition {
    string condition = 1;
    Retry retry = 2;
}

message Retry {
    google.protobuf.Duration interval = 1;
    int64 limit = 2;
}
